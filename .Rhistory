.$Country,
`Macau`                          = "Macao",
`Taiwan (Province of China)`     = "Taiwan",
`United States of America (the)` = "United States",
`Cape Verde`                     = "Cabo Verde",
`Korea (the Republic of)`        = "South Korea",
`Philippines (the)`              = "Philippines",
`Russian Federation (the)`       = "Russia",
`Viet Nam`                       = "Vietnam",
`Côte d'Ivoire`                  = "Ivory Coast",
`United Arab Emirates (the)`     = "United Arab Emirates",
`Iran (Islamic Republic of)`     = "Iran",
`Republic of North Macedonia`    = "North Macedonia",
`Dominican Republic (the)`       = "Dominican Republic",
`Saint Barthélemy`               = "Saint Barthelemy",
`Faroe Islands (the)`            = "Faroe Islands",
`Palestine, State of`            = "Palestine",
`Saint Martin (French part)`     = "Saint Martin",
`Netherlands (the)`              = "Netherlands",
`Holy See (the)`                 = "Vatican City",
`Réunion`                        = "Reunion",
`Cayman Islands (the)`           = "Cayman Islands",
`Sudan (the)`                    = "Sudan",
`Curaçao`                        = "Curacao",
`Central African Republic (the)` = "Central African Republic",
`Tanzania, United Republic of`   = "Tanzania",
`Bahamas (the)`                  = "Bahamas",
`Gambia (the)`                   = "Gambia",
`Niger (the)`                    = "Niger",
`Moldova (the Republic of)`      = "Moldova",
`Brunei Darussalam`              = "Brunei",
`Bolivia (Plurinational State of)`       = "Bolivia",
`Lao People's Democratic Republic (the)` = "Laos",
`Congo (the Democratic Republic of the)` = "Congo",
`Venezuela (Bolivarian Republic of)`     = "Venezuela",
`United Kingdom of Great Britain and Northern Ireland (the)` =
"United Kingdom"
)
) %>%
dplyr::bind_rows(
tibble::tibble(
"Country" = c("Diamond Princess", "Others", "Channel Islands")
)
) %>%
dplyr::mutate(
"flag_url" = paste0(
"https://cdn.rawgit.com/lipis/flag-icon-css/master/flags/4x3/",
tolower(.$`Alpha-2 code`),
".svg"
)
)
usethis::use_data(country_codes, overwrite = TRUE)
cc1
country_codes <- cc1 %>%
dplyr::mutate(
Country = dplyr::recode(
.$Country,
`Macau`                          = "Macao",
`Taiwan (Province of China)`     = "Taiwan",
`United States of America (the)` = "United States",
`Cape Verde`                     = "Cabo Verde",
`Korea (the Republic of)`        = "South Korea",
`Philippines (the)`              = "Philippines",
`Russian Federation (the)`       = "Russia",
`Viet Nam`                       = "Vietnam",
`Côte d'Ivoire`                  = "Ivory Coast",
`United Arab Emirates (the)`     = "United Arab Emirates",
`Iran (Islamic Republic of)`     = "Iran",
`Republic of North Macedonia`    = "North Macedonia",
`Dominican Republic (the)`       = "Dominican Republic",
`Saint Barthélemy`               = "Saint Barthelemy",
`Faroe Islands (the)`            = "Faroe Islands",
`Palestine, State of`            = "Palestine",
`Saint Martin (French part)`     = "Saint Martin",
`Netherlands (the)`              = "Netherlands",
`Holy See (the)`                 = "Vatican City",
`Réunion`                        = "Reunion",
`Cayman Islands (the)`           = "Cayman Islands",
`Sudan (the)`                    = "Sudan",
`Curaçao`                        = "Curacao",
`Central African Republic (the)` = "Central African Republic",
`Tanzania, United Republic of`   = "Tanzania",
`Bahamas (the)`                  = "Bahamas",
`Gambia (the)`                   = "Gambia",
`Niger (the)`                    = "Niger",
`Moldova (the Republic of)`      = "Moldova",
`Brunei Darussalam`              = "Brunei",
`Bolivia (Plurinational State of)`       = "Bolivia",
`Lao People's Democratic Republic (the)` = "Laos",
`Congo (the Democratic Republic of the)` = "Congo",
`Venezuela (Bolivarian Republic of)`     = "Venezuela",
`United Kingdom of Great Britain and Northern Ireland (the)` =
"United Kingdom"
)
) %>%
dplyr::bind_rows(
tibble::tibble(
"Country" = c("Diamond Princess", "Others", "Channel Islands")
)
) %>%
dplyr::mutate(
"flag_url" = paste0(
"https://cdn.rawgit.com/lipis/flag-icon-css/master/flags/4x3/",
tolower(.$`Alpha-2 code`),
".svg"
)
)
usethis::use_data(country_codes, overwrite = TRUE)
devtools::load_all(".")
vapply(
unique(corona_data$region),
function(region){
tolower(region) %in% tolower(country_codes$Country)
},
logical(1)
) %>% {
expect(
ok = all(.),
failure_message = paste0(
"These regions appear in ",
crayon::italic("corona_data"),
" but not in ",
crayon::italic("country_codes"),
":\n",
paste(crayon::bold(names(which(!.))), collapse = ", "),
"."
)
)
invisible()
}
View(cc1)
print(paste0("Active Project: ", usethis::proj_get()))
print(paste0("WD: )", getwd()))
corona_data <- list.files(
file.path(
"inst", "JHU_Data", "csse_covid_19_data", "csse_covid_19_daily_reports"
),
full.names = TRUE,
pattern = "(.*)\\.csv$"
) %>%
stats::setNames(., gsub("(.*)\\.csv$", "\\1", basename(.))) %>%
purrr::imap(
function(file_path, cdata_date){
day_data <- readr::read_csv(file_path) %>%
magrittr::set_colnames(
gsub(" ", "_", trimws(colnames(.))) %>%
gsub("_$", "", .) %>%
tolower()
) %>%
dplyr::mutate(
"confirmed"   = tidyr::replace_na(.$confirmed, 0),
"deaths"      = tidyr::replace_na(.$deaths, 0),
"recovered"   = tidyr::replace_na(.$recovered, 0),
"last_update" = tryCatch(
lubridate::as_datetime(.$last_update),
warning = function(w){
lubridate::mdy_hm(.$last_update)
}
),
"date"        = lubridate::mdy(cdata_date)
) %>%
dplyr::rename(
area      = tidyselect::any_of(
c("province/state", "province_state")
),
region    = tidyselect::any_of(c("country/region", "country_region")),
latitude  = tidyselect::any_of(c("latitude",  "lat")),
longitude = tidyselect::any_of(c("longitude", "long"))
)
if(any(colnames(day_data) == "fips")){
dplyr::mutate(
day_data,
"FIPS" = as.numeric(.data$fips)
) %>%
dplyr::select(-"fips")
} else {
day_data
}
}
) %>%
purrr::reduce(dplyr::bind_rows) %>%
dplyr::mutate(
region = dplyr::recode(
.$region,
`Mainland China`                       = "China",
`The Bahamas`                          = "Bahamas",
`Bahamas, The`                         = "Bahamas",
`Cape Verde`                           = "Cabo Verde",
`Congo (Brazzaville)`                  = "Congo",
`Congo (Kinshasa)`                     = "Congo",
`Cote d'Ivoire`                        = "Ivory Coast",
`Cruise Ship`                          = "Diamond Princess",
`Czech Republic`                       = "Czechia",
`Holy See`                             = "Vatican City",
`The Gambia`                           = "Gambia",
`Gambia, The`                          = "Gambia",
`Hong Kong SAR`                        = "Hong Kong",
`Iran (Islamic Republic of)`           = "Iran",
`Korea, South`                         = "South Korea",
`Kosovo`                               = "Serbia",
`Macao SAR`                            = "Macao",
`Macau`                                = "Macao",
`North Ireland`                        = "United Kingdom",
`West Bank and Gaza`                   = "occupied Palestinian territory",
`Republic of Ireland`                  = "Ireland",
`Republic of Korea`                    = "South Korea",
`Republic of Moldova`                  = "Moldova",
`Republic of the Congo`                = "Congo",
`Russian Federation`                   = "Russia",
`St. Martin`                           = "Saint Martin",
`Syrian Arab Republic`                 = "Syria",
`Taipei and environs`                  = "Taiwan",
`Taiwan*`                              = "Taiwan",
`East Timor`                           = "Timor-Leste",
`UK`                                   = "United Kingdom",
`US`                                   = "United States",
`Viet Nam`                             = "Vietnam"
)
) %>%
dplyr::distinct_at(
dplyr::vars("area", "region", "date"),
.keep_all = TRUE
) %>%
dplyr::select("date", dplyr::everything())
usethis::use_data(corona_data, overwrite = TRUE)
country_codes <- cc1 %>%
dplyr::mutate(
Country = dplyr::recode(
.$Country,
`Macau`                          = "Macao",
`Taiwan (Province of China)`     = "Taiwan",
`United States of America (the)` = "United States",
`Korea (the Republic of)`        = "South Korea",
`Philippines (the)`              = "Philippines",
`Russian Federation (the)`       = "Russia",
`Viet Nam`                       = "Vietnam",
`Côte d'Ivoire`                  = "Ivory Coast",
`United Arab Emirates (the)`     = "United Arab Emirates",
`Iran (Islamic Republic of)`     = "Iran",
`Republic of North Macedonia`    = "North Macedonia",
`Dominican Republic (the)`       = "Dominican Republic",
`Saint Barthélemy`               = "Saint Barthelemy",
`Faroe Islands (the)`            = "Faroe Islands",
`Palestine, State of`            = "Palestine",
`Saint Martin (French part)`     = "Saint Martin",
`Netherlands (the)`              = "Netherlands",
`Holy See (the)`                 = "Vatican City",
`Réunion`                        = "Reunion",
`Cayman Islands (the)`           = "Cayman Islands",
`Sudan (the)`                    = "Sudan",
`Curaçao`                        = "Curacao",
`Central African Republic (the)` = "Central African Republic",
`Tanzania, United Republic of`   = "Tanzania",
`Bahamas (the)`                  = "Bahamas",
`Gambia (the)`                   = "Gambia",
`Niger (the)`                    = "Niger",
`Moldova (the Republic of)`      = "Moldova",
`Brunei Darussalam`              = "Brunei",
`Bolivia (Plurinational State of)`       = "Bolivia",
`Lao People's Democratic Republic (the)` = "Laos",
`Congo (the Democratic Republic of the)` = "Congo",
`Venezuela (Bolivarian Republic of)`     = "Venezuela",
`United Kingdom of Great Britain and Northern Ireland (the)` =
"United Kingdom"
)
) %>%
dplyr::bind_rows(
tibble::tibble(
"Country" = c("Diamond Princess", "Others", "Channel Islands")
)
) %>%
dplyr::mutate(
"flag_url" = paste0(
"https://cdn.rawgit.com/lipis/flag-icon-css/master/flags/4x3/",
tolower(.$`Alpha-2 code`),
".svg"
)
)
usethis::use_data(country_codes, overwrite = TRUE)
rm(list=ls())
vapply(
unique(corona_data$region),
function(region){
tolower(region) %in% tolower(country_codes$Country)
},
logical(1)
) %>% {
expect(
ok = all(.),
failure_message = paste0(
"These regions appear in ",
crayon::italic("corona_data"),
" but not in ",
crayon::italic("country_codes"),
":\n",
paste(crayon::bold(names(which(!.))), collapse = ", "),
"."
)
)
invisible()
}
devtools::load_all(".")
vapply(
unique(corona_data$region),
function(region){
tolower(region) %in% tolower(country_codes$Country)
},
logical(1)
) %>% {
expect(
ok = all(.),
failure_message = paste0(
"These regions appear in ",
crayon::italic("corona_data"),
" but not in ",
crayon::italic("country_codes"),
":\n",
paste(crayon::bold(names(which(!.))), collapse = ", "),
"."
)
)
invisible()
}
devtools::load_all(".")
rm(list=ls9)
rm(list=ls())
print(paste0("Active Project: ", usethis::proj_get()))
print(paste0("WD: )", getwd()))
corona_data <- list.files(
file.path(
"inst", "JHU_Data", "csse_covid_19_data", "csse_covid_19_daily_reports"
),
full.names = TRUE,
pattern = "(.*)\\.csv$"
) %>%
stats::setNames(., gsub("(.*)\\.csv$", "\\1", basename(.))) %>%
purrr::imap(
function(file_path, cdata_date){
day_data <- readr::read_csv(file_path) %>%
magrittr::set_colnames(
gsub(" ", "_", trimws(colnames(.))) %>%
gsub("_$", "", .) %>%
tolower()
) %>%
dplyr::mutate(
"confirmed"   = tidyr::replace_na(.$confirmed, 0),
"deaths"      = tidyr::replace_na(.$deaths, 0),
"recovered"   = tidyr::replace_na(.$recovered, 0),
"last_update" = tryCatch(
lubridate::as_datetime(.$last_update),
warning = function(w){
lubridate::mdy_hm(.$last_update)
}
),
"date"        = lubridate::mdy(cdata_date)
) %>%
dplyr::rename(
area      = tidyselect::any_of(
c("province/state", "province_state")
),
region    = tidyselect::any_of(c("country/region", "country_region")),
latitude  = tidyselect::any_of(c("latitude",  "lat")),
longitude = tidyselect::any_of(c("longitude", "long"))
)
if(any(colnames(day_data) == "fips")){
dplyr::mutate(
day_data,
"FIPS" = as.numeric(.data$fips)
) %>%
dplyr::select(-"fips")
} else {
day_data
}
}
) %>%
purrr::reduce(dplyr::bind_rows) %>%
dplyr::mutate(
region = dplyr::recode(
.$region,
`Mainland China`                       = "China",
`The Bahamas`                          = "Bahamas",
`Bahamas, The`                         = "Bahamas",
`Cape Verde`                           = "Cabo Verde",
`Congo (Brazzaville)`                  = "Congo",
`Congo (Kinshasa)`                     = "Congo",
`Cote d'Ivoire`                        = "Ivory Coast",
`Cruise Ship`                          = "Diamond Princess",
`Czech Republic`                       = "Czechia",
`Holy See`                             = "Vatican City",
`The Gambia`                           = "Gambia",
`Gambia, The`                          = "Gambia",
`Hong Kong SAR`                        = "Hong Kong",
`Iran (Islamic Republic of)`           = "Iran",
`Korea, South`                         = "South Korea",
`Kosovo`                               = "Serbia",
`Macao SAR`                            = "Macao",
`Macau`                                = "Macao",
`North Ireland`                        = "United Kingdom",
`West Bank and Gaza`                   = "occupied Palestinian territory",
`Republic of Ireland`                  = "Ireland",
`Republic of Korea`                    = "South Korea",
`Republic of Moldova`                  = "Moldova",
`Republic of the Congo`                = "Congo",
`Russian Federation`                   = "Russia",
`St. Martin`                           = "Saint Martin",
`Taipei and environs`                  = "Taiwan",
`Taiwan*`                              = "Taiwan",
`East Timor`                           = "Timor-Leste",
`UK`                                   = "United Kingdom",
`US`                                   = "United States",
`Viet Nam`                             = "Vietnam"
)
) %>%
dplyr::distinct_at(
dplyr::vars("area", "region", "date"),
.keep_all = TRUE
) %>%
dplyr::select("date", dplyr::everything())
usethis::use_data(corona_data, overwrite = TRUE)
country_codes <- xml2::read_html("https://www.iban.com/country-codes") %>%
rvest::html_nodes("#myTable") %>%
rvest::html_table() %>%
.[[1]] %>%
tibble::as_tibble() %>%
dplyr::mutate(
Country = dplyr::recode(
.$Country,
`Macau`                          = "Macao",
`Taiwan (Province of China)`     = "Taiwan",
`United States of America (the)` = "United States",
`Korea (the Republic of)`        = "South Korea",
`Philippines (the)`              = "Philippines",
`Russian Federation (the)`       = "Russia",
`Syrian Arab Republic`           = "Syria",
`Viet Nam`                       = "Vietnam",
`Côte d'Ivoire`                  = "Ivory Coast",
`United Arab Emirates (the)`     = "United Arab Emirates",
`Iran (Islamic Republic of)`     = "Iran",
`Republic of North Macedonia`    = "North Macedonia",
`Dominican Republic (the)`       = "Dominican Republic",
`Saint Barthélemy`               = "Saint Barthelemy",
`Faroe Islands (the)`            = "Faroe Islands",
`Palestine, State of`            = "Palestine",
`Saint Martin (French part)`     = "Saint Martin",
`Netherlands (the)`              = "Netherlands",
`Holy See (the)`                 = "Vatican City",
`Réunion`                        = "Reunion",
`Cayman Islands (the)`           = "Cayman Islands",
`Sudan (the)`                    = "Sudan",
`Curaçao`                        = "Curacao",
`Central African Republic (the)` = "Central African Republic",
`Tanzania, United Republic of`   = "Tanzania",
`Bahamas (the)`                  = "Bahamas",
`Gambia (the)`                   = "Gambia",
`Niger (the)`                    = "Niger",
`Moldova (the Republic of)`      = "Moldova",
`Brunei Darussalam`              = "Brunei",
`Bolivia (Plurinational State of)`       = "Bolivia",
`Lao People's Democratic Republic (the)` = "Laos",
`Congo (the Democratic Republic of the)` = "Congo",
`Venezuela (Bolivarian Republic of)`     = "Venezuela",
`United Kingdom of Great Britain and Northern Ireland (the)` =
"United Kingdom"
)
) %>%
dplyr::bind_rows(
tibble::tibble(
"Country" = c(
"Diamond Princess", "Others", "Channel Islands",
"occupied Palestinian territory"
)
)
) %>%
dplyr::mutate(
"flag_url" = paste0(
"https://cdn.rawgit.com/lipis/flag-icon-css/master/flags/4x3/",
tolower(.$`Alpha-2 code`),
".svg"
)
)
usethis::use_data(country_codes, overwrite = TRUE)
rm(list=ls())
devtools::load_all(".")
vapply(
unique(corona_data$region),
function(region){
tolower(region) %in% tolower(country_codes$Country)
},
logical(1)
) %>% {
expect(
ok = all(.),
failure_message = paste0(
"These regions appear in ",
crayon::italic("corona_data"),
" but not in ",
crayon::italic("country_codes"),
":\n",
paste(crayon::bold(names(which(!.))), collapse = ", "),
"."
)
)
invisible()
}
usethis::use_package("crayon")
devtools::document()
travis::use_travis_deploy()
uesthis::use_data_raw("prints_yolo")
usethis::use_data_raw("prints_yolo")
devtools::load_all(".")
devtools::load_all(".")
usethis::use_travis()
