pattern = "(.*)\\.csv$"
) %>%
stats::setNames(., gsub("(.*)\\.csv$", "\\1", basename(.))) %>%
purrr::imap(
function(file_path, cdata_date){
readr::read_csv(file_path) %>%
magrittr::set_colnames(tolower(colnames(.))) %>%
dplyr::select(-`last update`) %>%
dplyr::mutate(
confirmed = tidyr::replace_na(confirmed, 0),
deaths    = tidyr::replace_na(deaths, 0),
recovered = tidyr::replace_na(recovered, 0),
date      = lubridate::mdy(cdata_date)
)
}
) %>%
purrr::reduce(dplyr::bind_rows) %>%
dplyr::rename(area = `province/state`, region = `country/region`) %>%
dplyr::mutate(
region = dplyr::recode(
region,
`Mainland China` = "China"
)
) %>%
dplyr::distinct_at(dplyr::vars(area, region, date), .keep_all = TRUE) %>%
dplyr::select(region) %>%
unlist() %>%
unique() %>%
sort()
list.files(
file.path("inst", "csse_covid_19_data", "csse_covid_19_daily_reports"),
full.names = TRUE,
pattern = "(.*)\\.csv$"
) %>%
stats::setNames(., gsub("(.*)\\.csv$", "\\1", basename(.))) %>%
purrr::imap(
function(file_path, cdata_date){
readr::read_csv(file_path) %>%
magrittr::set_colnames(tolower(colnames(.))) %>%
dplyr::select(-`last update`) %>%
dplyr::mutate(
confirmed = tidyr::replace_na(confirmed, 0),
deaths    = tidyr::replace_na(deaths, 0),
recovered = tidyr::replace_na(recovered, 0),
date      = lubridate::mdy(cdata_date)
)
}
) %>%
purrr::reduce(dplyr::bind_rows) %>%
dplyr::rename(area = `province/state`, region = `country/region`) %>%
dplyr::mutate(
region = dplyr::recode(
region,
`Mainland China`             = "China",
`The Bahamas`                = "Bahamas",
`Bahamas, The`               = "Bahamas",
`Congo (Brazzaville)`        = "Congo",
`Congo (Kinshasa)`           = "Congo",
`The Gambia`                 = "Gambia",
`Gambia, The`                = "Gambia",
`Hong Kong`                  = "Hong Kong SAR",
`Iran (Islamic Republic of)` = "Iran",
`Korea, South`               = "South Korea",
`Macao SAR`                  = "Macao",
`Republic of Ireland`        = "Ireland",
`Republic of Korea`          = "South Korea",
`Republic of Moldova`        = "Moldova",
`Republic of the Congo`      = "Congo",
`Russian Federation`         = "Russia",
`Taipei and environs`        = "Taiwan",
`Taiwan*`                    = "Taiwan"
)
) %>%
dplyr::distinct_at(dplyr::vars(area, region, date), .keep_all = TRUE) %>%
dplyr::select(region) %>%
unlist() %>%
unique() %>%
sort()
list.files(
file.path("inst", "csse_covid_19_data", "csse_covid_19_daily_reports"),
full.names = TRUE,
pattern = "(.*)\\.csv$"
) %>%
stats::setNames(., gsub("(.*)\\.csv$", "\\1", basename(.))) %>%
purrr::imap(
function(file_path, cdata_date){
readr::read_csv(file_path) %>%
magrittr::set_colnames(tolower(colnames(.))) %>%
dplyr::select(-`last update`) %>%
dplyr::mutate(
confirmed = tidyr::replace_na(confirmed, 0),
deaths    = tidyr::replace_na(deaths, 0),
recovered = tidyr::replace_na(recovered, 0),
date      = lubridate::mdy(cdata_date)
)
}
) %>%
purrr::reduce(dplyr::bind_rows) %>%
dplyr::rename(area = `province/state`, region = `country/region`) %>%
dplyr::mutate(
region = dplyr::recode(
region,
`Mainland China`             = "China",
`The Bahamas`                = "Bahamas",
`Bahamas, The`               = "Bahamas",
`Congo (Brazzaville)`        = "Congo",
`Congo (Kinshasa)`           = "Congo",
`The Gambia`                 = "Gambia",
`Gambia, The`                = "Gambia",
`Hong Kong`                  = "Hong Kong SAR",
`Iran (Islamic Republic of)` = "Iran",
`Korea, South`               = "South Korea",
`Macao SAR`                  = "Macao",
`Republic of Ireland`        = "Ireland",
`Republic of Korea`          = "South Korea",
`Republic of Moldova`        = "Moldova",
`Republic of the Congo`      = "Congo",
`Russian Federation`         = "Russia",
`Taipei and environs`        = "Taiwan",
`Taiwan*`                    = "Taiwan"
)
) %>%
dplyr::distinct_at(dplyr::vars(area, region, date), .keep_all = TRUE) %>%
dplyr::select(region) %>%
unlist() %>%
unique() %>%
sort()
list.files(
file.path("inst", "csse_covid_19_data", "csse_covid_19_daily_reports"),
full.names = TRUE,
pattern = "(.*)\\.csv$"
) %>%
stats::setNames(., gsub("(.*)\\.csv$", "\\1", basename(.))) %>%
purrr::imap(
function(file_path, cdata_date){
readr::read_csv(file_path) %>%
magrittr::set_colnames(tolower(colnames(.))) %>%
dplyr::select(-`last update`) %>%
dplyr::mutate(
confirmed = tidyr::replace_na(confirmed, 0),
deaths    = tidyr::replace_na(deaths, 0),
recovered = tidyr::replace_na(recovered, 0),
date      = lubridate::mdy(cdata_date)
)
}
) %>%
purrr::reduce(dplyr::bind_rows) %>%
dplyr::rename(area = `province/state`, region = `country/region`) %>%
dplyr::mutate(
region = dplyr::recode(
region,
`Mainland China`             = "China",
`The Bahamas`                = "Bahamas",
`Bahamas, The`               = "Bahamas",
`Congo (Brazzaville)`        = "Congo",
`Congo (Kinshasa)`           = "Congo",
`The Gambia`                 = "Gambia",
`Gambia, The`                = "Gambia",
`Hong Kong`                  = "Hong Kong SAR",
`Iran (Islamic Republic of)` = "Iran",
`Korea, South`               = "South Korea",
`Macao SAR`                  = "Macao",
`Republic of Ireland`        = "Ireland",
`Republic of Korea`          = "South Korea",
`Republic of Moldova`        = "Moldova",
`Republic of the Congo`      = "Congo",
`Russian Federation`         = "Russia",
`Taipei and environs`        = "Taiwan",
`Taiwan*`                    = "Taiwan",
`Viet Nam`                   = "Vietnam"
)
) %>%
dplyr::distinct_at(dplyr::vars(area, region, date), .keep_all = TRUE) %>%
dplyr::select(region) %>%
unlist() %>%
unique() %>%
sort()
## code to prepare `generate_corona_data` dataset goes here
library(magrittr)
corona_data <- list.files(
file.path("inst", "csse_covid_19_data", "csse_covid_19_daily_reports"),
full.names = TRUE,
pattern = "(.*)\\.csv$"
) %>%
stats::setNames(., gsub("(.*)\\.csv$", "\\1", basename(.))) %>%
purrr::imap(
function(file_path, cdata_date){
readr::read_csv(file_path) %>%
magrittr::set_colnames(tolower(colnames(.))) %>%
dplyr::select(-`last update`) %>%
dplyr::mutate(
confirmed = tidyr::replace_na(confirmed, 0),
deaths    = tidyr::replace_na(deaths, 0),
recovered = tidyr::replace_na(recovered, 0),
date      = lubridate::mdy(cdata_date)
)
}
) %>%
purrr::reduce(dplyr::bind_rows) %>%
dplyr::rename(area = `province/state`, region = `country/region`) %>%
dplyr::mutate(
region = dplyr::recode(
region,
`Mainland China`             = "China",
`The Bahamas`                = "Bahamas",
`Bahamas, The`               = "Bahamas",
`Congo (Brazzaville)`        = "Congo",
`Congo (Kinshasa)`           = "Congo",
`The Gambia`                 = "Gambia",
`Gambia, The`                = "Gambia",
`Hong Kong`                  = "Hong Kong SAR",
`Iran (Islamic Republic of)` = "Iran",
`Korea, South`               = "South Korea",
`Macao SAR`                  = "Macao",
`Republic of Ireland`        = "Ireland",
`Republic of Korea`          = "South Korea",
`Republic of Moldova`        = "Moldova",
`Republic of the Congo`      = "Congo",
`Russian Federation`         = "Russia",
`Taipei and environs`        = "Taiwan",
`Taiwan*`                    = "Taiwan",
`Viet Nam`                   = "Vietnam"
)
) %>%
dplyr::distinct_at(dplyr::vars(area, region, date), .keep_all = TRUE)
usethis::use_data(corona_data, overwrite = TRUE)
devtools::load_all(".")
rm(list=ls())
shinydashboardPlus::shinydashboardPlusGallery()
install.packages("shinyAce")
shinydashboardPlus::shinydashboardPlusGallery()
install.packages("styler")
shinydashboardPlus::shinydashboardPlusGallery()
install.packages("shinyEffects")
shinydashboardPlus::shinydashboardPlusGallery()
shinyWidgets::shinyWidgetsGallery()
devtools::load_all(".")
runApp('inst/shiny_app')
runApp('inst/shiny_app')
install.packages("dygraphs")
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
corona_data %>%
dplyr::filter(.$region %in% "China")
corona_data %>%
dplyr::filter(.$region %in% "China") %>%
dplyr::select(confirmed, deaths, recovered, date) %>%
dplyr::group_by(date)
corona_data %>%
dplyr::filter(.$region %in% "China") %>%
dplyr::select(confirmed, deaths, recovered, date) %>%
dplyr::group_by(date) %>%
dplyr::summarise_all(sum)
devtools::load_all(".")
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
input <- list()
input$regions <- c("Chile", "China", "Italy")
corona_data %>%
dplyr::filter(region %in% input$regions)
corona_data %>%
dplyr::filter(region %in% input$regions) %>%
dplyr::select(confirmed, deaths, recovered, date) %>%
dplyr::group_by(date, region)
corona_data %>%
dplyr::filter(region %in% input$regions) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region)
corona_data %>%
dplyr::filter(region %in% input$regions) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum)
corona_data %>%
dplyr::filter(region %in% input$regions) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
(deaths + recovered)
)
corona_data %>%
dplyr::filter(region %in% input$regions) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
(deaths + recovered)
)
?pivot_longer
??pivot_longer
?tidyr::pivot_wider()
corona_data %>%
dplyr::filter(region %in% input$regions) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
(deaths + recovered)
) %>%
tidyr::pivot_wider(names_from = region, values_from = value)
corona_data %>%
dplyr::filter(region %in% input$regions) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
(deaths + recovered)
) %>%
tidyr::pivot_wider(names_from = region, values_from = value) %>%
tibble::column_to_rownames("date")
dygraph(
corona_data %>%
dplyr::filter(region %in% input$regions) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
(deaths + recovered)
) %>%
tidyr::pivot_wider(names_from = region, values_from = value) %>%
tibble::column_to_rownames("date") %>%
xts::as.xts()
)
?table
table(corona_data$region)
rm(list=ls())
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
?pickerInput
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
corona_data %>%
dplyr::filter(region %in% "China")  %>%
dplyr::select(confirmed, deaths, recovered, date) %>%
dplyr::group_by(date) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
# "date"   = date,
# "region" = region,
# "value"  = (confirmed - deaths - recovered) /
#     (deaths + recovered)
"open" = confirmed - deaths - recovered,
"closed" = deaths + recovered
) %>%
plot()
corona_data %>%
dplyr::filter(region %in% "China")  %>%
dplyr::select(confirmed, deaths, recovered, date) %>%
dplyr::group_by(date) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
# "date"   = date,
# "region" = region,
# "value"  = (confirmed - deaths - recovered) /
#     (deaths + recovered)
"closed" = deaths + recovered,
"open" = confirmed - deaths - recovered
) %>%
plot()
corona_data %>%
dplyr::filter(region %in% "US")  %>%
dplyr::select(confirmed, deaths, recovered, date) %>%
dplyr::group_by(date) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
# "date"   = date,
# "region" = region,
# "value"  = (confirmed - deaths - recovered) /
#     (deaths + recovered)
"closed" = deaths + recovered,
"open" = confirmed - deaths - recovered
) %>%
plot()
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
corona_data %>%
dplyr::filter(
region %in% c(
"China", "Italy", "Spain", "US", "Germany", "Iran", "France"
)
) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup()
corona_data %>%
dplyr::filter(
region %in% c(
"China", "Italy", "Spain", "US", "Germany", "Iran", "France"
)
) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
sum(deaths, recovered)
)
corona_data %>%
dplyr::filter(
region %in% c(
"China", "Italy", "Spain", "US", "Germany", "Iran", "France"
)
) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
sum(deaths, recovered)
) %>%
tidyr::pivot_wider(names_from = region, values_from = value)
corona_data %>%
dplyr::filter(
region %in% c(
"China", "Italy", "Spain", "US", "Germany", "Iran", "France"
)
) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup()
547 - 17 - 28
corona_data %>%
dplyr::filter(
region %in% c(
"China", "Italy", "Spain", "US", "Germany", "Iran", "France"
)
) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
(deaths + recovered)
)
dygraph(
corona_data %>%
dplyr::filter(
region %in% c(
"China", "Italy", "Spain", "US", "Germany", "Iran", "France"
)
) %>%
dplyr::select(confirmed, deaths, recovered, date, region) %>%
dplyr::group_by(date, region) %>%
dplyr::summarise_all(sum) %>%
dplyr::ungroup() %>%
dplyr::transmute(
"date"   = date,
"region" = region,
"value"  = (confirmed - deaths - recovered) /
(confirmed)
) %>%
tidyr::pivot_wider(names_from = region, values_from = value) %>%
tibble::column_to_rownames("date") %>%
xts::as.xts()
)
runApp('inst/shiny_app')
runApp('inst/shiny_app')
corona_data
View(corona_data)
runApp('inst/shiny_app')
runApp('inst/shiny_app')
shinyWidgets::shinyWidgetsGallery()
countries
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
runApp('inst/shiny_app')
